def chain_length(s, word_set):
    """Returns the length of a chain starting at s, considering only words in
    word_set as valid children"""
    if not s:
        return 0
    length = 1
    for i in range(len(s)):
        child = s[:i] + s[i + 1:]
        if child in word_set:
            length = max(length, 1 + chain_length(child, word_set))
    return length


def longest_chain(w):
    """Returns the longest chain of words generated by removing one
    character at a time from any word in w"""
    w.sort()
    max_chain = 0
    word_set = set(w)  # O(1) word lookup
    for s in w:
        if len(s) > max_chain:
            max_chain = max(max_chain, chain_length(s, word_set))
    return max_chain


n = int(raw_input())
w = [raw_input() for _ in range(n)]
print longest_chain(w)
